[
  {
    "title": "The Power of Tail Events: Why You Can Lose Most of the Time and Still Win Big",
    "date": "2025-01-10",
    "content": [
      {
        "heading": "Understanding Tail Events",
        "paragraph": [
          "You can lose 50% of the time and still make a fortune. Don't underestimate tail events - those rare, minute number of events that have a major impact on everything. The Psychology of Money by Morgan Housel outlines this concept perfectly.",
          "Out of the 15 billion people born in the past 100 years, the world would have looked vastly different had just four people not been born: Jeff Bezos, Bill Gates, Elon Musk, and Mark Zuckerberg. Similarly, four major events have shaped our world dramatically: the Great Depression, World War II, Covid-19, and the AI revolution."
        ]
      },
      {
        "heading": "Real-World Examples",
        "paragraph": [
          "While hundreds of events happen daily, some tail events affect everything. Take Jeff Bezos for example - he experiments with hundreds of ideas, most failing like the Fire Phone, but when one or two succeed (AWS and Amazon Prime), it's game-changing. Warren Buffett reportedly made most of his fortune from just 10 out of 500 stock investments.",
          "Disney's story is another powerful example. Despite being in debt with 400 failed productions, a single 80-minute movie turned everything around, clearing their massive debts and providing unprecedented prosperity."
        ]
      },
      {
        "heading": "Key Takeaway",
        "paragraph": [
          "The actionable lesson is clear: stay in the game and understand the power of extreme events to capitalize on them. Even if 99% of what you do fails, that crucial 1% success can turn everything around. The key is persistence and recognition of these potentially transformative opportunities."
        ]
      }
    ]
  },
  {
    "title": "Money 101",
    "date": "2024-10-30",
    "content": [
      {
        "heading": "Circulation in a Straight Line",
        "paragraph": [
          "Imagine placing 100 people in a straight line. Give the first person $1, and they pass it along the line, exchanging the dollar for a hug. By the end, all 100 people have hugged each other, and the same $1 has been circulated.",
          "Now, replace that $1 with one million dollars, and the hug with a service or product worth one million. Jeff Bezos starts off with this million and gives it to the second person in exchange for 10 cars. The second person then passes the money to the third for 7 houses, and the third gives it to the fourth for ten thousand sandwiches. This process continues until the 100th person. Finally, the 100th person returns the million to Jeff Bezos, exchanging it for a bundle of Amazon purchases.",
          "This example illustrates how money circulates in an economy. To thrive, you need to position yourself in this line, offering high-value or high-quantity services or products. The key is not just to be in the flow but to add value at each step."
        ]
      },
      {
        "heading": "Value Creation and the Flow of Wealth",
        "paragraph": [
          "Money, by itself, is just a medium of exchange, a tool for transferring value. It only holds power when it's put to use. Whether you're offering sandwiches, cars, or houses, the goal is to make sure the value of what you’re offering exceeds the money being exchanged. That's how you elevate your financial standing.",
          "Value is created when people are willing to exchange money for something they need, want, or believe will improve their life. The wealthiest individuals didn’t accumulate money by holding onto it; they created value in forms that people were willing to pay for—whether it was convenience, entertainment, or time saved. The key to wealth isn't how much money you can collect; it's how much value you can generate in return for it."
        ]
      },
      {
        "heading": "The Velocity of Money",
        "paragraph": [
          "In a healthy economy, money constantly circulates. Each time money changes hands, something of value is exchanged. That's why economic growth is often measured not by how much money exists but by how fast it is being exchanged. This concept is called the 'velocity of money.'",
          "For an individual, this means the real opportunity is not in hoarding cash but in finding ways to insert yourself into this ongoing flow. Those who provide the most value at scale tend to attract the most money."
        ]
      },
      {
        "heading": "Your Role in the Economy",
        "paragraph": [
          "So, how do you become part of this circulation? How do you become one of those exchanging value on a larger scale?",
          "1. **Identify a Need:** What problems do people face that you could solve? The best way to add value is by addressing a real, tangible need. It could be through creating a product, offering a service, or saving people time and effort.",
          "2. **Leverage Technology:** Technology is a powerful multiplier of value. You can build an app, create digital products, or sell goods globally through platforms like Amazon. With the right use of technology, your reach can extend far beyond your local community.",
          "3. **Scale Your Impact:** Once you've identified a value-add opportunity, think about how to scale it. Can you automate processes, hire a team, or collaborate with partners to expand your reach? Scaling helps move from impacting a few individuals to potentially millions."
        ]
      },
      {
        "heading": "Conclusion: Money as a Tool",
        "paragraph": [
          "At its core, money is a tool for circulating value. If you want to grow financially, focus less on the dollar amounts and more on the value you’re creating. Whether it's through products, services, or experiences, your goal should be to create something that others find valuable enough to exchange their money for.",
          "The wealthiest people didn’t set out to just make money—they set out to solve problems, meet needs, and deliver value on a massive scale. Shift your mindset from 'how do I make money?' to 'how do I create value for others?' and the money will follow naturally."
        ]
      }
    ]
  },
  {
    "title": "AI with API Function Calls",
    "date": "2024-10-30",
    "content": [
      {
        "heading": "API Function Calls",
        "paragraph": [
          "API function calls are a way to interact with a server or service to get data or perform actions. APIs (Application Programming Interfaces) allow developers to connect to various platforms and use their features in their own applications. Through API calls, one can request information, submit data, or perform updates in a system by sending structured requests to the service endpoints. This is especially useful when integrating AI models with external data sources, enabling them to interact dynamically with real-time data."
        ]
      },
      {
        "heading": "How AI Uses API Calls",
        "paragraph": [
          "AI systems often rely on API function calls to extend their capabilities. For instance, a machine learning model can use APIs to fetch the latest financial data or weather information, enhancing decision-making and predictions. API calls can also allow AI to control IoT devices, send notifications, or even interact with other web services like Google Maps or social media platforms."
        ]
      },
      {
        "heading": "Implementing API Calls in AI Projects",
        "paragraph": [
          "Incorporating API function calls into AI projects requires understanding how to structure API requests and handle responses. Typically, this involves using RESTful APIs or GraphQL, where you send HTTP requests, often in JSON format, and process the server's responses. Many programming languages like Python have libraries (e.g., `requests` or `http.client`) to simplify this process. Once the API call is set up, it allows AI applications to retrieve and work with external data seamlessly, making the AI more adaptable and capable of operating in dynamic environments."
        ]
      },
      {
        "heading": "Benefits of Using API Calls in AI",
        "paragraph": [
          "The use of API function calls in AI projects has several advantages. It allows AI systems to stay updated with the most current data, provides scalability by offloading certain tasks to external services, and enables seamless integration with third-party platforms. This makes AI more flexible and practical for real-world applications like e-commerce, healthcare, and autonomous systems."
        ]
      },
      {
        "heading": "Using API Calls to Build an LLM for Finding Amazon Products",
        "paragraph": [
          "Recently, I used API calls to build a language model (LLM) that helps users find products on Amazon based on various filters. By leveraging the Amazon Product Advertising API, I enabled the model to search for products and apply filters such as price range, customer ratings, categories, and specific features. The API allows for real-time access to product listings, reviews, and detailed descriptions, making the model capable of presenting the best options based on user preferences.",
          "The integration of multiple filters ensures that the product recommendations are not only accurate but also highly personalized. This use of API calls demonstrates how AI can enhance user experience by providing customized results, streamlining the product discovery process, and automating the decision-making flow for online shopping."
        ]
      }
    ]
  },
  {
    "title": "LeetCode?",
    "date": "2024-09-07",
    "content": [
      {
        "heading": "What and why?",
        "paragraph": [
          "About a month ago, I decided to really dive into LeetCode. I’d always heard it was great for prepping for interviews and such. I’d done a handful of problems over the years but never really got into it—I just didn’t enjoy it much.",
          "This time, I committed to giving it a real shot. For the past month or so, I’ve been consistently solving a few problems every day, and, surprisingly, I’m starting to enjoy it.",
          "It reminds me of how things usually go when I start something new, especially when it’s something difficult. In the beginning, it’s frustrating or even boring, but as I improve, it becomes more fun. I think it’s human nature—we tend to enjoy things we’re good at. But to get good, we have to push through that initial tough phase.",
          "I originally started this grind to sharpen my DSA skills and land an internship thinking it's going to be a chore, but now I’m enjoying it alot. It's like i'm a twitch streamer that gets paid to play games they enjoy (although I don't get paid right now, I just kindof hope it gets me paid in the near future haha."
        ]
      },
      {
        "heading": "Has it helped me yet?",
        "paragraph": [
          "It’s actually been helping a lot. Even after just a month, I already feel way more confident with interview questions and online assessments. I’ve recently started applying for internships, and after going through a few OAs (Online Assessments), I can physically feel the difference in my problem-solving and DSA skills. There’s still a lot of room for improvement, but this feels like one of those activities that give you high returns for your effort."
        ]
      },
      {
        "heading": "The Plan Going Forward",
        "paragraph": [
          "So far, I’ve done about 100 problems, mostly mediums and easies. My plan is to hit around 200 more and go back to review the ones I’ve already solved. Once I feel like I’ve reached an expert level, I’ll start tackling the hard problems. I’m also planning to dive into system design problems and do a few mock interviews down the line. The ultimate goal is to land a solid internship, but honestly, I’m here to enjoy the journey as much as the destination."
        ]
      }
    ]
  },
  {
    "title": "Machine Learning",
    "date": "2024-08-03",
    "content": [
      {
        "heading": "Introduction",
        "paragraph": [
          "I have been working with LLM models for a while now, and every day I'm fascinated by how good they are becoming. However, they still have plenty of shortcomings.",
          "A few days ago, I realized I have a passion for AI and decided to dive deeper into the field. I started by taking a course on Coursera for ML, and I'm loving it!",
          "I've learned so many things in a short amount of time and finally put the linear algebra course that I took in my first year of university to use. Here is some of what I've learned."
        ]
      },
      {
        "heading": "Some basics",
        "paragraph": [
          "I'm going to summarize every major topic I've learned, so it might not be too intuitive, but here we go! Keep in mind that I'm still learning these topics and am no expert.",
          "Supervised learning is when the model is trained on labeled data. An example is predicting house prices based on different parameters such as size and the number of bedrooms, given already known house prices and their parameters.",
          "Unsupervised learning is when the model is trained on unlabeled data. An example is clustering similar articles together based on their content. This is different from supervised learning, as there are no labels to guide the model.",
          "Linear regression is a supervised learning algorithm that uses an optimization algorithm like gradient descent or the normal equation to minimize the cost function (the difference between the predicted value and the actual value) and create a line of best fit. This best fit line doesn't have to be a straight line; it could be a polynomial if that would better fit the data."
        ]
      },
      {
        "heading": "Why Linear Algebra?",
        "paragraph": [
          "When I was taking Math 211 at university, I couldn't imagine a use case for linear algebra, but recently I found out it's quite useful. Using matrices and vectors is essential in ML for mapping out parameters, expected values, and performing complex operations on them.",
          "Take the normal equation, for example; linear algebra is fundamental for performing optimization using it. Linear algebra becomes even more useful when the number of parameters increases."
        ]
      },
      {
        "heading": "Logistic Regression",
        "paragraph": [
          "Logistic regression is a supervised learning algorithm used for binary classification tasks. Unlike linear regression, which predicts a continuous value, logistic regression predicts the probability that an input belongs to a particular class.",
          "The key to logistic regression is the use of the sigmoid function, which transforms the output into a probability between 0 and 1. This allows logistic regression to classify data points based on a threshold, typically 0.5.",
          "The cost function for logistic regression is the binary cross-entropy or log-loss, which measures how well the predicted probabilities match the actual binary outcomes."
        ]
      },
      {
        "heading": "Regularization",
        "paragraph": [
          "Regularization is a technique to prevent overfitting by adding a penalty to the model's cost function. In logistic regression, common regularization techniques include L1 (Lasso) and L2 (Ridge) regularization.",
          "L2 regularization penalizes large coefficients by adding the squared magnitude of coefficients to the cost function, helping to reduce variance without increasing bias too much. L1 regularization, on the other hand, adds the absolute value of coefficients, often resulting in sparse models by driving some coefficients to zero.",
          "The regularization parameter, lambda, controls the strength of the penalty. A higher lambda value increases the regularization effect, which can be useful when working with a large number of features."
        ]
      }
    ]
  },

  {
    "title": "Prompt Engineering",
    "date": "2024-07-01",
    "content": [
      {
        "heading": "Prompt Engineering",
        "paragraph": "Working at DA, I got to interact with different tweaked LLM models. I got into prompt engineering. Here are some engineered prompts you can copy paste to get optimal responses from a LLM like chatGPT or GeminiAI. The possibilities are endless. You can even use AI to meta-engineer prompts by giving them instructions that ask for improvements to the prompt you're considering."
      },
      {
        "heading": "Fitness",
        "paragraph": [
          "I want to create a comprehensive guide to fitness and body aesthetics for men, focusing on gym-based training. Please act as a knowledgeable fitness coach and break down the information into 10 separate responses, covering the following topics in detail:",
          "",
          "1. Foundational Principles: Explain the core principles of muscle growth, fat loss, and overall health improvement.",
          "2. Macronutrients: Detail the role of protein, carbohydrates, and fats in a fitness-oriented diet, including recommended daily intake ranges for men.",
          "3. Protein Deep Dive: Focus specifically on protein – types, sources, optimal timing for consumption, and its crucial role in muscle building.",
          "4. Workout Splits: Explain different workout splits (e.g., full body, push/pull/legs) and their advantages/disadvantages.",
          "5. Exercise Selection: Discuss key compound exercises and isolation exercises for each muscle group, emphasizing proper form and technique.",
          "6. Progressive Overload: Explain the importance of progressively increasing weight, reps, or sets over time to stimulate muscle growth.",
          "7. Rest and Recovery: Highlight the significance of rest days, sleep, and active recovery for muscle repair and growth.",
          "8. Diet Planning Basics: Provide a step-by-step guide to creating a personalized diet plan based on calorie needs and macronutrient ratios.",
          "9. Supplement Considerations: Discuss popular fitness supplements (e.g., creatine, whey protein), their potential benefits and drawbacks, and safe usage.",
          "10. Goal Setting and Tracking Progress: Explain how to set realistic fitness goals, track progress effectively, and stay motivated.",
          "",
          "Please provide specific examples, actionable advice, and clear explanations in each response."
        ]
      },
      {
        "heading": "Learning DSA",

        "paragraph": [
          "I want to become proficient in Data Structures and Algorithms (DSA) and excel at LeetCode problem-solving. Guide me through a structured learning and practice plan, incorporating the following:",
          "1. Learning Path:",
          "   - Recommended resources: Suggest comprehensive and beginner-friendly resources for learning DSA concepts (e.g., books, online courses, websites).",
          "   - Concept prioritization: Outline a prioritized list of DSA topics to focus on, starting with fundamentals and progressing to advanced concepts.",
          "   - Active learning strategies: Recommend effective techniques for internalizing concepts (e.g., note-taking, visualization, teaching others).",
          "2. LeetCode Practice:",
          "   - Structured approach: Describe a systematic approach to tackling LeetCode problems (e.g., understanding the problem, planning a solution, coding, testing, optimization).",
          "   - Problem selection: Suggest a strategy for selecting problems based on difficulty, topic, and relevance to interviews.",
          "   - Pattern recognition: Help me identify common problem patterns and develop strategies for solving similar problems efficiently.",
          "3. Progress Tracking and Improvement:",
          "   - Tracking methods: Recommend tools or methods for tracking progress and identifying areas for improvement.",
          "   - Analysis and reflection: Guide me on analyzing my solutions, understanding time and space complexity, and learning from mistakes.",
          "   - Community engagement: Suggest ways to engage with the coding community for support and feedback.",
          "4. Time Management and Consistency:",
          "   - Realistic goals: Help me set achievable goals and develop a consistent study schedule.",
          "   - Motivation and accountability: Suggest strategies for staying motivated and accountable throughout the learning process.",
          "Bonus: Include tips on preparing for coding interviews and showcasing DSA skills to potential employers."
        ]
      },
      {
        "heading": "Lacking Purpose",
        "paragraph": [
          "Universal Prompt (When you feel lost):",
          "",
          "\"I'm feeling lost and lacking direction in my life. Imagine you're a wise mentor who deeply understands me. What activities, skills, or areas of exploration do you think would be worth my time and energy right now? Consider my interests [list a few of your interests] and any skills or knowledge I already possess [mention any relevant skills].\"",
          "",
          "Scenario-Based Prompts:",
          "",
          "1. Feeling unmotivated in the morning: \"I'm struggling to find the motivation to start my day. Can you suggest three small, achievable actions I could take today that might make me feel more accomplished and engaged?\"",
          "2. Unsure of career path: \"I'm feeling uncertain about my career path. Based on my interests in [list interests], skills in [list skills], and values of [list values], what are some potential career paths or fields I should explore?\"",
          "3. Yearning for a creative outlet: \"I'm looking for a creative outlet to express myself. What are some unique or unconventional creative activities you would recommend for someone who enjoys [list hobbies or interests]?\"",
          "4. Wanting to make a difference: \"I want to contribute to the world in a meaningful way but don't know where to start. What are some pressing issues that need attention, and how could someone with my skills and interests [list skills and interests] get involved?\""
        ]
      }
    ]
  },
  {
    "title": " Data Analysis",
    "date": "2024-06-24",
    "image": "https://cdn.pixabay.com/photo/2023/08/05/15/42/panda-8171354_1280.jpg",
    "content": [
      {
        "heading": "My Story",
        "paragraph": [
          "I got into data analysis before I started university. I began exploring this field even before I had fully learned Python. It all started the year after I graduated from high school. Like many others, I was unsure about what I wanted to do with my life. Working out was my main hobby, and I thought, \"Probably Kinesiology.\" I also dreamed of becoming a millionaire and considered studying business.",
          "One day, I had a brilliant idea: Why not do a quick Google search on the best, highest-demand, future-proof careers? Consistently at the top of the list were \"Computer Science,\" \"Data Science,\" and other IT-related fields. This reminded me of when I was first introduced to Scratch at age 10, JavaScript for graphics at 12, and Python at 13. I spent a week or two fiddling with them and found them fun, but I was young and more interested in exploring the world, so I didn't dive deep into any of them.",
          "Deciding to give it another shot, I bought a $15 course on Udemy called \"100 Days of Code.\" I spent the next 30 days focused on this course and was hooked. I loved everything about Python, from its intuitiveness to the speed at which I could create applications from ideas that popped into my head. One of the first applications I created without any guidance turned out to be an application that made me thousands of dollars indirectly. Here’s how it happened:",
          "Long story short, after around 30 days of learning Python, I found a data entry job which I automated using Pandas and PyAutoGUI. I used Pandas to handle the data cleanly, pixel color recognition from PyAutoGUI, and time.sleep to coordinate human-like actions that input data as fast and accurately as possible. Before my Python script, this task was done manually for years, costing the company thousands of dollars and many human hours.s"
        ]
      },
      {
        "heading": "That was my first brush with Pandas.",
        "paragraph": [
          "That's when I realized how powerful Python, the Pandas library, and coding in general are. Before this experience, I was uncertain about going into computer science. After this experience, I was excited and couldn’t wait to get started, to learn more, and to discover everything Pandas had to offer. Fast forward a few years, and I'm working on training data analysis for AI models. I use Pandas daily, making plots with Matplotlib and Seaborn, cleaning up data, and calculating means.",
          "So here's a quick tutorial for Pandas that I'm writing off the top of my head, with no revision."
        ]
      },
      {
        "heading": "Pandas Tutorial",
        "paragraph": [
          "Notice that this will be a quick overview to showcase the power of Pandas as far as I know it. The Pandas library is extremely powerful, and I don't think I've explored all it has to offer yet. So here goes nothing.",
          "Pandas allows you to feed a Python script any Excel-like file, performing an extremely wide range of operations on it. It can process a CSV file (or Excel, TSV, etc.) and creates an object in Python called a DataFrame. Pandas mainly works with two objects: the Series and the DataFrame. The DataFrame is much more common, but the Series is important too. The Series is very similar to a Python array, while the DataFrame is akin to a 2D Python array. Here is how every data analysis project typically starts:",
          "`df = pd.read_csv(path)` This line of code is extremely common in any Python script that uses Pandas. It simply reads a CSV file provided by the path variable and turns it into a DataFrame so that you can work with it in Python. It is the gateway from an Excel sheet into Python code.",
          "After that, you usually want to inspect the data to understand it better. You could use the following lines of code:",
          "`df.info()` This displays all columns and their types. Sometimes you might think a column is of a numerical type but find out it's of an object type. You would have to convert object types to numerical types often if you want to work with numbers to extract values such as average or median.",
          "`df.head(10).to_markdown()` I personally find this line of code very useful in PyCharm. It displays the first 10 rows of the DataFrame in Markdown, which means it will look nice and clean. I prefer this sometimes to looking at the data in Excel.",
          "Now, say one of the columns is called Total and has 30 entries representing the total price of different items. If you would like to find the average price of all 30 items, you would do something like this:",
          "`avg = df[\"Total\"].mean()` `print(avg)`",
          "You have now used Pandas to perform a complex calculation on an Excel sheet. This is barely scratching the surface of what Pandas is capable of. For example, other capabilities of Pandas include data cleaning, data manipulation, handling missing data, merging datasets, and supporting time series analysis, which means it can comprehend a wide range of time formats (with the help of the datetime library), etc. Every day, I aim to become a better data analyst, and every day, I find pandas a little cuter ;) I might drop a more advanced data analysis blog soon as I settle more in the career of data analysis or data science, so stay tuned."
        ]
      },
      {
        "image": "https://images.seattletimes.com/wp-content/uploads/2021/02/panda-050c061c-60de-11eb-9061-07abcc1f9229.jpg?d=1020x680"
      }
    ]
  }
]
